#!/usr/bin/env ruby

require 'logger'
require 'optparse'
require_relative '../client'

auto = false
log  = Logger::INFO
num  = 3
pid  = nil
snap = false

OptionParser.new do |args|
  args.on('-a', '--auto',    'automatically take snapshots') {     auto = true }
  args.on('-n', '--num N',   'start an N-node cluster')      { |n| num  = n.to_i }
  args.on('-p', '--pid P',   'start a member with PID P')    { |p| pid  = p.to_i }
  args.on('-q', '--quiet',   'minimal logging')              {     log  = Logger::WARN }
  args.on('-s', '--snap',    'take a snapshot manually')     {     snap = true }
  args.on('-v', '--verbose', 'log all the things')           {     log  = Logger::DEBUG }
end.parse!

if snap
  socket = TCPSocket.open('localhost', 5000 + (pid || 1))
  socket.print("-42\n")
  exit 0
end

range   = (pid)? [pid] : (1..num)
threads = range.map do |pid|
  Thread.new do
    Client.new({
      auto: auto,
      pid:  pid,
      network_size: num,
      verbosity: log
    }).run!
  end
end

threads.each do |thread|
  thread.join
end
